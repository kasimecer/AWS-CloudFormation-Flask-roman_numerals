AWSTemplateFormatVersion: "2010-09-09"
Description: aws-cloud_formation-flask-roman_numerals

Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must be the name of an existing EC2 KeyPair
  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64'

Resources:
  WebServerInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref LatestAmiId
      InstanceType: t2.micro
      SecurityGroups:
        - !Ref WebServerSecurityGroup
      KeyName: !Ref KeyName
      UserData: !Base64 |
        #! /bin/bash
        yum update -y
        yum install python3 -y
        yum install python3-pip -y
        pip3 install flask
        yum install git -y
        cd /home/ec2-user
        wget -P templates https://raw.githubusercontent.com/kasimecer/aws-cloud_formation-flask-roman_numerals/main/templates/index.html
        wget -P templates https://raw.githubusercontent.com/kasimecer/aws-cloud_formation-flask-roman_numerals/main/templates/result.html
        wget https://raw.githubusercontent.com/kasimecer/aws-cloud_formation-flask-roman_numerals/main/app.py
        python3 app.py

      
  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP access on port 80
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0

Outputs:
  WebsiteURL:
    Description: URL of the aws-cloud_formation-flask-roman_numerals Application
    Value: !Sub "http://${WebServerInstance.PublicDnsName}"
